.global _start

_start: 

//Esto interrumpe cada segundo

        movia sp,0x7fffffc	//inicializa la pila
        movia r2,0x10002000
        addi r3,r0,0x02fa
        sthio r3, c(r2)
        addi r3,r0,0xf080
        sthio r3.8(r2)
        aadi r3,r0,0b0111
        sthio r3,4(r2)

        movi r2,1
        wrctl ienable,r2	//activa las interrupciones del timer
        wrctl status,r2		//activa las interrupciones del proceso

        movia r2,0x10000020
        addi r3,r0,0x3f
        stwio r3,0(r2)

pause:	br pause


.org 0x500

num:	.word 0

patron: .word 0x3f,0x6,0x5b,0x4f,0x66,0x6d,0x7d,0x7,0x7f,0x6f

.section.exceptions,"ax"
.global handler

handler:

        subi sp,sp,4
        stw et,0(sp)
        rdctl et,ipending

        beq et,r0,noint
        subi ea,ea,4

        subi sp,sp,8
        stw r2,0(sp)
        stw ra,4(sp)

        andi r2,et,1
        beq r2,r0,noint
        call timer	

salir:	ldw r2,0(sp)
        ldw ra,4(sp)
        addi sp,sp,4 	


noint:	ldw et,0(sp)
        addi sp,sp,4
        eret


timer:	movia r2, 0x10002000
	      stwio r0,0(r2)		//limpiar el TO

//guardar r2,r3,r4,r5

        ldw r3,num(r0)
        addi r3,r3,1
        slli r3,r3,1
        ldw r4, patron(r3)
        movia r5,0x10000020
        stwio r4,0(r5)
        ret

//recuperar r2,r3,r4,r5



